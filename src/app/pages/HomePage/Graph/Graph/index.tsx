import { Link, useNavigate } from 'react-router-dom'
import { styled } from '@mui/material/styles'
import { forwardRef, ForwardRefRenderFunction, memo, MouseEventHandler, useEffect, useState } from 'react'
import { RouteUtils } from '../../../../utils/route-utils'
import { useScreenSize } from '../../../../hooks/useScreensize'
import { Layer } from '../../../../../oasis-nexus/api'
import { Network } from '../../../../../types/network'
import { COLORS } from '../../../../../styles/theme/testnet/colors'
import { useTranslation } from 'react-i18next'

interface GraphBaseProps {
  disabled?: boolean
  transparent?: boolean
}

interface GraphProps extends GraphBaseProps {
  network: Network
  scale: number
  // TODO: Consider moving this to a state management solution
  selectedLayer?: Layer
  setSelectedLayer: (value: Layer) => void
  setActiveMobileGraphTooltip: (layer: Layer | null) => void
  isZoomedIn: boolean
}

const GraphStyled = styled('svg', {
  shouldForwardProp: prop =>
    !(['disabled', 'transparent'] as (keyof GraphBaseProps)[]).includes(prop as keyof GraphBaseProps),
})<GraphBaseProps>(({ disabled, transparent }) => ({
  position: 'absolute',
  left: '50%',
  top: '50%',
  width: '80%',
  height: '80%',
  transform: 'translate(-50%, -50%)',
  ...(disabled || transparent
    ? {
        pointerEvents: 'none',
      }
    : {}),
  ...(transparent
    ? {
        opacity: 0.25,
      }
    : {}),
  '[id]:not([aria-disabled="true"])': {
    cursor: 'pointer',
  },
  [`g[id$=circle]`]: {
    'ellipse:not(:last-child)': {
      display: 'inline',
    },
    'ellipse:last-child': {
      display: 'none',
    },
    '&:hover, &:focus-visible': {
      'ellipse:not(:last-child)': {
        display: 'none',
      },
      'ellipse:last-child': {
        display: 'inline',
      },
      'circle:not(.no-hide)': {
        display: 'none',
      },
    },
  },
  // TODO: :has not supported in Firefox
  [`g[id$=circle]:has( + g[id$=label]:hover)`]: {
    'ellipse:not(:last-child)': {
      display: 'none',
    },
    'ellipse:last-child': {
      display: 'inline',
    },
    'circle:not(.no-hide)': {
      display: 'none',
    },
  },
  text: {
    'user-select': 'none',
  },
}))

const preventDoubleClick: { onDoubleClick: MouseEventHandler } = {
  onDoubleClick: e => e.preventDefault(),
}

const handleHover: (
  layer: Layer,
  set: (layer: Layer) => void,
) => {
  onMouseEnter: MouseEventHandler
  onMouseLeave: MouseEventHandler
} = (layer: Layer, set: (layer: Layer | null) => void) => ({
  onMouseEnter: () => set(layer),
  onMouseLeave: () => set(null),
})

const GraphCmp: ForwardRefRenderFunction<SVGSVGElement, GraphProps> = (
  {
    disabled = false,
    transparent = false,
    selectedLayer,
    network,
    setSelectedLayer,
    scale,
    setActiveMobileGraphTooltip,
    isZoomedIn,
  },
  ref,
) => {
  const { t } = useTranslation()
  const navigate = useNavigate()
  const { isMobile } = useScreenSize()
  const [hoveredLayer, setHoveredLayer] = useState<Layer | null>(null)

  useEffect(() => {
    setActiveMobileGraphTooltip(null)
    // should only close tooltips on isMobile change
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [isMobile])

  const isLayerDisabled = (Layer: Layer) => {
    return !RouteUtils.getEnabledLayersForNetwork(network).includes(Layer)
  }

  const disabledMap: Record<Layer, boolean> = {
    [Layer.emerald]: isLayerDisabled(Layer.emerald),
    [Layer.consensus]: isLayerDisabled(Layer.consensus),
    [Layer.cipher]: isLayerDisabled(Layer.cipher),
    [Layer.sapphire]: isLayerDisabled(Layer.sapphire),
  }

  const onSelectLayer = (layer: Layer) => {
    if (isMobile && isZoomedIn) {
      setSelectedLayer(layer)
      setActiveMobileGraphTooltip(layer)

      return
    }

    if (!isMobile && RouteUtils.getEnabledLayersForNetwork(network).includes(layer)) {
      navigate(RouteUtils.getDashboardRoute({ network, layer }))

      return
    }
  }

  const graphThemes = {
    mainnet: {
      cipherCircle: 'url(#paint7_radial_6093_287252)',
      cipherCircleFilter: 'url(#filter2_dii_6093_287252)',
      cipherCircleFill: COLORS.darkBlue,
      emeraldCircle: 'url(#paint6_radial_6093_287252)',
      emeraldCircleFilter: 'url(#filter0_dii_6093_287252)',
      sapphireCircle: 'url(#paint7_radial_6093_287252)',
      sapphireCircleFilter: 'url(#filter1_dii_6093_287252)',
      consensusCircle: COLORS.brandExtraDark,
      line: COLORS.aqua,
      text: COLORS.white,
      textBackground: COLORS.graphLabel,
      textBorder: COLORS.graphLine,
      circleBorder: COLORS.brandExtraDark,
      hoverBackground: COLORS.aqua,
      hoverText: COLORS.brandExtraDark,
    },
    testnet: {
      cipherCircle: COLORS.testnet,
      cipherCircleFilter: 'url(#filter2_di_6093_290291)',
      cipherCircleFill: COLORS.testnet,
      emeraldCircle: COLORS.testnet,
      emeraldCircleFilter: 'url(#filter0_di_6093_290291)',
      sapphireCircle: COLORS.testnet,
      sapphireCircleFilter: 'url(#filter1_di_6093_290291)',
      consensusCircle: COLORS.testnetLight,
      line: COLORS.testnet,
      text: COLORS.brandExtraDark,
      textBackground: COLORS.testnetLight,
      textBorder: COLORS.testnet,
      circleBorder: COLORS.testnet,
      hoverBackground: COLORS.brandExtraDark,
      hoverText: COLORS.white,
    },
  }

  const graphTheme = graphThemes[network]

  return (
    <GraphStyled
      width="396"
      height="387"
      viewBox="0 0 396 387"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      disabled={disabled}
      transparent={transparent}
      hoveredLayer={hoveredLayer}
      preserveAspectRatio="xMidYMid slice"
      ref={ref}
    >
      <path
        d="M257.947 218.31C259.1 209.19 258.447 199.932 256.023 191.064C253.598 182.197 249.452 173.894 243.819 166.629C238.186 159.364 231.177 153.28 223.193 148.724C215.208 144.168 206.405 141.229 197.285 140.075C188.164 138.921 178.906 139.575 170.039 141.999C161.172 144.423 152.868 148.57 145.604 154.203C138.339 159.836 132.255 166.844 127.698 174.829C123.142 182.813 120.203 191.617 119.05 200.737C117.896 209.857 118.549 219.115 120.974 227.982C123.398 236.85 127.545 245.153 133.178 252.418C138.811 259.683 145.819 265.767 153.804 270.323C161.788 274.879 170.591 277.818 179.712 278.972C188.832 280.126 198.09 279.472 206.957 277.048C215.825 274.624 224.128 270.477 231.393 264.844C238.657 259.211 244.742 252.202 249.298 244.218C253.854 236.233 256.793 227.43 257.947 218.31L257.947 218.31Z"
        stroke={graphTheme.line}
        strokeWidth="6.16169"
        strokeDasharray="0.27 2.71"
      />
      <path d="M195.673 102.451L155.947 76.6719" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M195.674 102.451L235.399 73.925" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M183.768 210.158L308.693 202.227" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M187.221 212.965L195.884 103.508" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M167.502 240L132.572 287.516" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M121.083 308.697L87.666 342.253" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M127.501 299.77L163.137 333.266" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M112.336 295.148L69.5934 271.379" stroke={graphTheme.line} strokeWidth="2" />
      <path d="M197.319 77.6547L196.607 28.753" stroke={graphTheme.line} strokeWidth="2" />

      <g style={{ pointerEvents: !disabledMap.emerald ? 'auto' : 'none' }}>
        <Link to={RouteUtils.getLatestTransactionsRoute({ network, layer: Layer.emerald })}>
          <path
            d="M250.839 37.333C262.715 37.333 272.341 46.9589 272.341 58.833C272.341 70.7071 262.715 80.333 250.839 80.333C238.964 80.333 229.338 70.7071 229.338 58.833C229.338 46.9589 238.964 37.333 250.839 37.333Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M243.43 61.833V55.413H244.27V61.833H243.43ZM241.2 55.603V54.833H246.5V55.603H241.2ZM246.707 61.833L248.747 58.963L250.187 56.833H251.137L249.237 59.533L247.677 61.833H246.707ZM250.297 61.833L248.757 59.533L246.837 56.833H247.787L249.237 58.963L251.257 61.833H250.297ZM252.053 61.833V56.833H252.803L252.853 57.753V61.833H252.053ZM255.563 61.833V59.273L256.363 58.973V61.833H255.563ZM255.563 59.273C255.563 58.7797 255.507 58.403 255.393 58.143C255.28 57.883 255.123 57.7063 254.923 57.613C254.723 57.513 254.497 57.463 254.243 57.463C253.803 57.463 253.46 57.6197 253.213 57.933C252.973 58.2397 252.853 58.6763 252.853 59.243H252.463C252.463 58.7163 252.54 58.263 252.693 57.883C252.847 57.503 253.067 57.213 253.353 57.013C253.647 56.813 254 56.713 254.413 56.713C255.02 56.713 255.497 56.8997 255.843 57.273C256.197 57.6463 256.37 58.213 256.363 58.973L255.563 59.273ZM259.379 61.953C259.013 61.953 258.693 61.8997 258.419 61.793C258.146 61.6797 257.916 61.533 257.729 61.353C257.549 61.173 257.419 60.9763 257.339 60.763L258.039 60.473C258.153 60.6997 258.323 60.883 258.549 61.023C258.776 61.163 259.026 61.233 259.299 61.233C259.613 61.233 259.876 61.173 260.089 61.053C260.303 60.9263 260.409 60.7497 260.409 60.523C260.409 60.3163 260.329 60.1497 260.169 60.023C260.016 59.8963 259.786 59.793 259.479 59.713L258.999 59.583C258.546 59.463 258.193 59.283 257.939 59.043C257.686 58.7963 257.559 58.5197 257.559 58.213C257.559 57.7397 257.713 57.373 258.019 57.113C258.333 56.8463 258.796 56.713 259.409 56.713C259.703 56.713 259.969 56.7563 260.209 56.843C260.449 56.9297 260.656 57.053 260.829 57.213C261.003 57.3663 261.129 57.5497 261.209 57.763L260.509 58.073C260.423 57.8463 260.279 57.683 260.079 57.583C259.879 57.483 259.636 57.433 259.349 57.433C259.043 57.433 258.803 57.4997 258.629 57.633C258.456 57.7597 258.369 57.9397 258.369 58.173C258.369 58.3063 258.439 58.433 258.579 58.553C258.726 58.6663 258.939 58.7597 259.219 58.833L259.719 58.963C260.046 59.043 260.319 59.163 260.539 59.323C260.759 59.4763 260.926 59.653 261.039 59.853C261.153 60.053 261.209 60.2663 261.209 60.493C261.209 60.793 261.129 61.053 260.969 61.273C260.809 61.493 260.593 61.663 260.319 61.783C260.046 61.8963 259.733 61.953 259.379 61.953Z"
            fill={graphTheme.text}
          />
        </Link>
        <Link to={RouteUtils.getLatestBlocksRoute({ network, layer: Layer.emerald })}>
          <path
            d="M139.839 39.333C151.715 39.333 161.341 48.9589 161.341 60.833C161.341 72.7071 151.715 82.333 139.839 82.333C127.964 82.333 118.338 72.7071 118.338 60.833C118.338 48.9589 127.964 39.333 139.839 39.333Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M126.872 63.833V63.073H128.712C129.152 63.073 129.495 62.9697 129.742 62.763C129.995 62.5497 130.122 62.2597 130.122 61.893C130.122 61.4997 129.979 61.1897 129.692 60.963C129.405 60.7363 129.005 60.6263 128.492 60.633H126.872V59.923H128.082C128.682 59.923 129.195 59.9997 129.622 60.153C130.055 60.3063 130.389 60.533 130.622 60.833C130.855 61.1263 130.972 61.4897 130.972 61.923C130.972 62.3297 130.882 62.6763 130.702 62.963C130.522 63.243 130.265 63.4597 129.932 63.613C129.605 63.7597 129.212 63.833 128.752 63.833H126.872ZM126.252 63.833V56.833H127.092V63.833H126.252ZM126.852 60.653V59.903H128.672C129.059 59.903 129.362 59.7997 129.582 59.593C129.802 59.3863 129.912 59.0997 129.912 58.733C129.912 58.353 129.782 58.0597 129.522 57.853C129.269 57.6463 128.909 57.5463 128.442 57.553H126.852V56.833L128.462 56.823C128.942 56.823 129.352 56.8997 129.692 57.053C130.032 57.1997 130.295 57.4163 130.482 57.703C130.669 57.983 130.762 58.3263 130.762 58.733C130.762 59.1197 130.662 59.4563 130.462 59.743C130.262 60.023 129.979 60.2397 129.612 60.393C129.245 60.5463 128.809 60.623 128.302 60.623L126.852 60.653ZM132.135 63.833V56.833H132.935V63.833H132.135ZM136.543 63.953C136.056 63.953 135.623 63.843 135.243 63.623C134.869 63.3963 134.576 63.0863 134.363 62.693C134.149 62.2997 134.043 61.8463 134.043 61.333C134.043 60.8197 134.146 60.3663 134.353 59.973C134.566 59.5797 134.859 59.273 135.233 59.053C135.613 58.8263 136.043 58.713 136.523 58.713C137.016 58.713 137.449 58.8263 137.823 59.053C138.203 59.273 138.496 59.5797 138.703 59.973C138.916 60.3663 139.023 60.8197 139.023 61.333C139.023 61.8463 138.916 62.2997 138.703 62.693C138.496 63.0863 138.206 63.3963 137.833 63.623C137.459 63.843 137.029 63.953 136.543 63.953ZM136.543 63.213C136.876 63.213 137.166 63.133 137.413 62.973C137.659 62.813 137.853 62.593 137.993 62.313C138.139 62.033 138.213 61.7063 138.213 61.333C138.213 60.9597 138.139 60.633 137.993 60.353C137.853 60.073 137.656 59.853 137.403 59.693C137.149 59.533 136.856 59.453 136.523 59.453C136.196 59.453 135.906 59.533 135.653 59.693C135.406 59.853 135.209 60.073 135.063 60.353C134.923 60.633 134.853 60.9597 134.853 61.333C134.853 61.6997 134.923 62.0263 135.063 62.313C135.209 62.593 135.409 62.813 135.663 62.973C135.923 63.133 136.216 63.213 136.543 63.213ZM142.363 63.953C141.87 63.953 141.433 63.843 141.053 63.623C140.673 63.3963 140.377 63.0863 140.163 62.693C139.95 62.2997 139.843 61.8463 139.843 61.333C139.843 60.8197 139.947 60.3663 140.153 59.973C140.367 59.5797 140.663 59.273 141.043 59.053C141.423 58.8263 141.857 58.713 142.343 58.713C142.823 58.713 143.253 58.823 143.633 59.043C144.013 59.263 144.303 59.573 144.503 59.973L143.773 60.303C143.64 60.0363 143.447 59.8297 143.193 59.683C142.94 59.5297 142.65 59.453 142.323 59.453C141.997 59.453 141.707 59.533 141.453 59.693C141.207 59.853 141.01 60.0763 140.863 60.363C140.723 60.643 140.653 60.9663 140.653 61.333C140.653 61.6997 140.723 62.0263 140.863 62.313C141.01 62.593 141.21 62.813 141.463 62.973C141.723 63.133 142.017 63.213 142.343 63.213C142.67 63.213 142.96 63.1297 143.213 62.963C143.473 62.7963 143.67 62.563 143.803 62.263L144.533 62.593C144.333 63.0197 144.043 63.353 143.663 63.593C143.283 63.833 142.85 63.953 142.363 63.953ZM146.323 62.223L145.813 61.673L148.473 58.833H149.483L146.323 62.223ZM145.543 63.833V56.833H146.343V63.833H145.543ZM148.693 63.833L146.793 60.963L147.313 60.403L149.683 63.833H148.693ZM152.147 63.953C151.78 63.953 151.46 63.8997 151.187 63.793C150.914 63.6797 150.684 63.533 150.497 63.353C150.317 63.173 150.187 62.9763 150.107 62.763L150.807 62.473C150.92 62.6997 151.09 62.883 151.317 63.023C151.544 63.163 151.794 63.233 152.067 63.233C152.38 63.233 152.644 63.173 152.857 63.053C153.07 62.9263 153.177 62.7497 153.177 62.523C153.177 62.3163 153.097 62.1497 152.937 62.023C152.784 61.8963 152.554 61.793 152.247 61.713L151.767 61.583C151.314 61.463 150.96 61.283 150.707 61.043C150.454 60.7963 150.327 60.5197 150.327 60.213C150.327 59.7397 150.48 59.373 150.787 59.113C151.1 58.8463 151.564 58.713 152.177 58.713C152.47 58.713 152.737 58.7563 152.977 58.843C153.217 58.9297 153.424 59.053 153.597 59.213C153.77 59.3663 153.897 59.5497 153.977 59.763L153.277 60.073C153.19 59.8463 153.047 59.683 152.847 59.583C152.647 59.483 152.404 59.433 152.117 59.433C151.81 59.433 151.57 59.4997 151.397 59.633C151.224 59.7597 151.137 59.9397 151.137 60.173C151.137 60.3063 151.207 60.433 151.347 60.553C151.494 60.6663 151.707 60.7597 151.987 60.833L152.487 60.963C152.814 61.043 153.087 61.163 153.307 61.323C153.527 61.4763 153.694 61.653 153.807 61.853C153.92 62.053 153.977 62.2663 153.977 62.493C153.977 62.793 153.897 63.053 153.737 63.273C153.577 63.493 153.36 63.663 153.087 63.783C152.814 63.8963 152.5 63.953 152.147 63.953Z"
            fill={graphTheme.text}
          />
        </Link>
        <Link to={RouteUtils.getTopTokensRoute({ network, layer: Layer.emerald })}>
          <path
            d="M196.839 3.27392C208.715 3.27392 218.341 12.8998 218.341 24.7739C218.341 36.648 208.715 46.2739 196.839 46.2739C184.964 46.2739 175.338 36.648 175.338 24.7739C175.338 12.8998 184.964 3.27393 196.839 3.27392Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M183.607 27.7739V21.3539H184.447V27.7739H183.607ZM181.377 21.5439V20.7739H186.677V21.5439H181.377ZM189.08 27.8939C188.593 27.8939 188.16 27.7839 187.78 27.5639C187.406 27.3373 187.113 27.0273 186.9 26.6339C186.686 26.2406 186.58 25.7873 186.58 25.2739C186.58 24.7606 186.683 24.3073 186.89 23.9139C187.103 23.5206 187.396 23.2139 187.77 22.9939C188.15 22.7673 188.58 22.6539 189.06 22.6539C189.553 22.6539 189.986 22.7673 190.36 22.9939C190.74 23.2139 191.033 23.5206 191.24 23.9139C191.453 24.3073 191.56 24.7606 191.56 25.2739C191.56 25.7873 191.453 26.2406 191.24 26.6339C191.033 27.0273 190.743 27.3373 190.37 27.5639C189.996 27.7839 189.566 27.8939 189.08 27.8939ZM189.08 27.1539C189.413 27.1539 189.703 27.0739 189.95 26.9139C190.196 26.7539 190.39 26.5339 190.53 26.2539C190.676 25.9739 190.75 25.6473 190.75 25.2739C190.75 24.9006 190.676 24.5739 190.53 24.2939C190.39 24.0139 190.193 23.7939 189.94 23.6339C189.686 23.4739 189.393 23.3939 189.06 23.3939C188.733 23.3939 188.443 23.4739 188.19 23.6339C187.943 23.7939 187.746 24.0139 187.6 24.2939C187.46 24.5739 187.39 24.9006 187.39 25.2739C187.39 25.6406 187.46 25.9673 187.6 26.2539C187.746 26.5339 187.946 26.7539 188.2 26.9139C188.46 27.0739 188.753 27.1539 189.08 27.1539ZM193.45 26.1639L192.94 25.6139L195.6 22.7739H196.61L193.45 26.1639ZM192.67 27.7739V20.7739H193.47V27.7739H192.67ZM195.82 27.7739L193.92 24.9039L194.44 24.3439L196.81 27.7739H195.82ZM199.606 27.8939C199.12 27.8939 198.69 27.7839 198.316 27.5639C197.943 27.3373 197.65 27.0273 197.436 26.6339C197.23 26.2406 197.126 25.7873 197.126 25.2739C197.126 24.7606 197.23 24.3073 197.436 23.9139C197.65 23.5206 197.94 23.2139 198.306 22.9939C198.68 22.7673 199.106 22.6539 199.586 22.6539C200.046 22.6539 200.446 22.7706 200.786 23.0039C201.133 23.2306 201.4 23.5506 201.586 23.9639C201.773 24.3773 201.866 24.8639 201.866 25.4239H201.066C201.066 24.9973 201.01 24.6339 200.896 24.3339C200.783 24.0273 200.613 23.7906 200.386 23.6239C200.166 23.4573 199.896 23.3739 199.576 23.3739C199.25 23.3739 198.96 23.4539 198.706 23.6139C198.46 23.7673 198.27 23.9873 198.136 24.2739C198.003 24.5606 197.936 24.8973 197.936 25.2839C197.936 25.6639 198.01 25.9939 198.156 26.2739C198.303 26.5473 198.506 26.7639 198.766 26.9239C199.026 27.0773 199.32 27.1539 199.646 27.1539C199.993 27.1539 200.286 27.0706 200.526 26.9039C200.766 26.7373 200.956 26.5206 201.096 26.2539L201.796 26.6039C201.67 26.8639 201.5 27.0906 201.286 27.2839C201.08 27.4773 200.833 27.6273 200.546 27.7339C200.266 27.8406 199.953 27.8939 199.606 27.8939ZM197.656 25.4239L197.666 24.7339H201.376V25.4239H197.656ZM202.875 27.7739V22.7739H203.625L203.675 23.6939V27.7739H202.875ZM206.385 27.7739V25.2139L207.185 24.9139V27.7739H206.385ZM206.385 25.2139C206.385 24.7206 206.329 24.3439 206.215 24.0839C206.102 23.8239 205.945 23.6473 205.745 23.5539C205.545 23.4539 205.319 23.4039 205.065 23.4039C204.625 23.4039 204.282 23.5606 204.035 23.8739C203.795 24.1806 203.675 24.6173 203.675 25.1839H203.285C203.285 24.6573 203.362 24.2039 203.515 23.8239C203.669 23.4439 203.889 23.1539 204.175 22.9539C204.469 22.7539 204.822 22.6539 205.235 22.6539C205.842 22.6539 206.319 22.8406 206.665 23.2139C207.019 23.5873 207.192 24.1539 207.185 24.9139L206.385 25.2139ZM210.202 27.8939C209.835 27.8939 209.515 27.8406 209.242 27.7339C208.968 27.6206 208.738 27.4739 208.552 27.2939C208.372 27.1139 208.242 26.9173 208.162 26.7039L208.862 26.4139C208.975 26.6406 209.145 26.8239 209.372 26.9639C209.598 27.1039 209.848 27.1739 210.122 27.1739C210.435 27.1739 210.698 27.1139 210.912 26.9939C211.125 26.8673 211.232 26.6906 211.232 26.4639C211.232 26.2573 211.152 26.0906 210.992 25.9639C210.838 25.8373 210.608 25.7339 210.302 25.6539L209.822 25.5239C209.368 25.4039 209.015 25.2239 208.762 24.9839C208.508 24.7373 208.382 24.4606 208.382 24.1539C208.382 23.6806 208.535 23.3139 208.842 23.0539C209.155 22.7873 209.618 22.6539 210.232 22.6539C210.525 22.6539 210.792 22.6973 211.032 22.7839C211.272 22.8706 211.478 22.9939 211.652 23.1539C211.825 23.3073 211.952 23.4906 212.032 23.7039L211.332 24.0139C211.245 23.7873 211.102 23.6239 210.902 23.5239C210.702 23.4239 210.458 23.3739 210.172 23.3739C209.865 23.3739 209.625 23.4406 209.452 23.5739C209.278 23.7006 209.192 23.8806 209.192 24.1139C209.192 24.2473 209.262 24.3739 209.402 24.4939C209.548 24.6073 209.762 24.7006 210.042 24.7739L210.542 24.9039C210.868 24.9839 211.142 25.1039 211.362 25.2639C211.582 25.4173 211.748 25.5939 211.862 25.7939C211.975 25.9939 212.032 26.2073 212.032 26.4339C212.032 26.7339 211.952 26.9939 211.792 27.2139C211.632 27.4339 211.415 27.6039 211.142 27.7239C210.868 27.8373 210.555 27.8939 210.202 27.8939Z"
            fill={graphTheme.text}
          />
        </Link>
      </g>

      <g style={{ pointerEvents: !disabledMap.sapphire ? 'auto' : 'none' }}>
        <Link to={RouteUtils.getLatestBlocksRoute({ network, layer: Layer.sapphire })}>
          <path
            d="M78.8395 331.333C90.7145 331.333 100.341 340.959 100.341 352.833C100.341 364.707 90.7145 374.333 78.8395 374.333C66.9644 374.333 57.3379 364.707 57.3379 352.833C57.3379 340.959 66.9644 331.333 78.8395 331.333Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M65.872 355.833V355.073H67.712C68.152 355.073 68.4953 354.97 68.742 354.763C68.9953 354.55 69.122 354.26 69.122 353.893C69.122 353.5 68.9786 353.19 68.692 352.963C68.4053 352.736 68.0053 352.626 67.492 352.633H65.872V351.923H67.082C67.682 351.923 68.1953 352 68.622 352.153C69.0553 352.306 69.3886 352.533 69.622 352.833C69.8553 353.126 69.972 353.49 69.972 353.923C69.972 354.33 69.882 354.676 69.702 354.963C69.522 355.243 69.2653 355.46 68.932 355.613C68.6053 355.76 68.212 355.833 67.752 355.833H65.872ZM65.252 355.833V348.833H66.092V355.833H65.252ZM65.852 352.653V351.903H67.672C68.0586 351.903 68.362 351.8 68.582 351.593C68.802 351.386 68.912 351.1 68.912 350.733C68.912 350.353 68.782 350.06 68.522 349.853C68.2686 349.646 67.9086 349.546 67.442 349.553H65.852V348.833L67.462 348.823C67.942 348.823 68.352 348.9 68.692 349.053C69.032 349.2 69.2953 349.416 69.482 349.703C69.6686 349.983 69.762 350.326 69.762 350.733C69.762 351.12 69.662 351.456 69.462 351.743C69.262 352.023 68.9786 352.24 68.612 352.393C68.2453 352.546 67.8086 352.623 67.302 352.623L65.852 352.653ZM71.1352 355.833V348.833H71.9352V355.833H71.1352ZM75.5425 355.953C75.0558 355.953 74.6225 355.843 74.2425 355.623C73.8692 355.396 73.5758 355.086 73.3625 354.693C73.1492 354.3 73.0425 353.846 73.0425 353.333C73.0425 352.82 73.1458 352.366 73.3525 351.973C73.5658 351.58 73.8592 351.273 74.2325 351.053C74.6125 350.826 75.0425 350.713 75.5225 350.713C76.0158 350.713 76.4492 350.826 76.8225 351.053C77.2025 351.273 77.4958 351.58 77.7025 351.973C77.9158 352.366 78.0225 352.82 78.0225 353.333C78.0225 353.846 77.9158 354.3 77.7025 354.693C77.4958 355.086 77.2058 355.396 76.8325 355.623C76.4592 355.843 76.0292 355.953 75.5425 355.953ZM75.5425 355.213C75.8758 355.213 76.1658 355.133 76.4125 354.973C76.6592 354.813 76.8525 354.593 76.9925 354.313C77.1392 354.033 77.2125 353.706 77.2125 353.333C77.2125 352.96 77.1392 352.633 76.9925 352.353C76.8525 352.073 76.6558 351.853 76.4025 351.693C76.1492 351.533 75.8558 351.453 75.5225 351.453C75.1958 351.453 74.9058 351.533 74.6525 351.693C74.4058 351.853 74.2092 352.073 74.0625 352.353C73.9225 352.633 73.8525 352.96 73.8525 353.333C73.8525 353.7 73.9225 354.026 74.0625 354.313C74.2092 354.593 74.4092 354.813 74.6625 354.973C74.9225 355.133 75.2158 355.213 75.5425 355.213ZM81.3633 355.953C80.87 355.953 80.4333 355.843 80.0533 355.623C79.6733 355.396 79.3766 355.086 79.1633 354.693C78.95 354.3 78.8433 353.846 78.8433 353.333C78.8433 352.82 78.9466 352.366 79.1533 351.973C79.3666 351.58 79.6633 351.273 80.0433 351.053C80.4233 350.826 80.8566 350.713 81.3433 350.713C81.8233 350.713 82.2533 350.823 82.6333 351.043C83.0133 351.263 83.3033 351.573 83.5033 351.973L82.7733 352.303C82.64 352.036 82.4466 351.83 82.1933 351.683C81.94 351.53 81.65 351.453 81.3233 351.453C80.9966 351.453 80.7066 351.533 80.4533 351.693C80.2066 351.853 80.01 352.076 79.8633 352.363C79.7233 352.643 79.6533 352.966 79.6533 353.333C79.6533 353.7 79.7233 354.026 79.8633 354.313C80.01 354.593 80.21 354.813 80.4633 354.973C80.7233 355.133 81.0166 355.213 81.3433 355.213C81.67 355.213 81.96 355.13 82.2133 354.963C82.4733 354.796 82.67 354.563 82.8033 354.263L83.5333 354.593C83.3333 355.02 83.0433 355.353 82.6633 355.593C82.2833 355.833 81.85 355.953 81.3633 355.953ZM85.3234 354.223L84.8134 353.673L87.4734 350.833H88.4834L85.3234 354.223ZM84.5434 355.833V348.833H85.3434V355.833H84.5434ZM87.6934 355.833L85.7934 352.963L86.3134 352.403L88.6834 355.833H87.6934ZM91.147 355.953C90.7803 355.953 90.4603 355.9 90.187 355.793C89.9136 355.68 89.6836 355.533 89.497 355.353C89.317 355.173 89.187 354.976 89.107 354.763L89.807 354.473C89.9203 354.7 90.0903 354.883 90.317 355.023C90.5436 355.163 90.7936 355.233 91.067 355.233C91.3803 355.233 91.6436 355.173 91.857 355.053C92.0703 354.926 92.177 354.75 92.177 354.523C92.177 354.316 92.097 354.15 91.937 354.023C91.7836 353.896 91.5536 353.793 91.247 353.713L90.767 353.583C90.3136 353.463 89.9603 353.283 89.707 353.043C89.4536 352.796 89.327 352.52 89.327 352.213C89.327 351.74 89.4803 351.373 89.787 351.113C90.1003 350.846 90.5636 350.713 91.177 350.713C91.4703 350.713 91.737 350.756 91.977 350.843C92.217 350.93 92.4236 351.053 92.597 351.213C92.7703 351.366 92.897 351.55 92.977 351.763L92.277 352.073C92.1903 351.846 92.047 351.683 91.847 351.583C91.647 351.483 91.4036 351.433 91.117 351.433C90.8103 351.433 90.5703 351.5 90.397 351.633C90.2236 351.76 90.137 351.94 90.137 352.173C90.137 352.306 90.207 352.433 90.347 352.553C90.4936 352.666 90.707 352.76 90.987 352.833L91.487 352.963C91.8136 353.043 92.087 353.163 92.307 353.323C92.527 353.476 92.6936 353.653 92.807 353.853C92.9203 354.053 92.977 354.266 92.977 354.493C92.977 354.793 92.897 355.053 92.737 355.273C92.577 355.493 92.3603 355.663 92.087 355.783C91.8136 355.896 91.5003 355.953 91.147 355.953Z"
            fill={graphTheme.text}
          />
        </Link>
        <Link to={RouteUtils.getLatestTransactionsRoute({ network, layer: Layer.sapphire })}>
          <path
            d="M176.839 323.333C188.715 323.333 198.341 332.959 198.341 344.833C198.341 356.707 188.715 366.333 176.839 366.333C164.964 366.333 155.338 356.707 155.338 344.833C155.338 332.959 164.964 323.333 176.839 323.333Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M169.43 347.833V341.413H170.27V347.833H169.43ZM167.2 341.603V340.833H172.5V341.603H167.2ZM172.707 347.833L174.747 344.963L176.187 342.833H177.137L175.237 345.533L173.677 347.833H172.707ZM176.297 347.833L174.757 345.533L172.837 342.833H173.787L175.237 344.963L177.257 347.833H176.297ZM178.053 347.833V342.833H178.803L178.853 343.753V347.833H178.053ZM181.563 347.833V345.273L182.363 344.973V347.833H181.563ZM181.563 345.273C181.563 344.78 181.507 344.403 181.393 344.143C181.28 343.883 181.123 343.706 180.923 343.613C180.723 343.513 180.497 343.463 180.243 343.463C179.803 343.463 179.46 343.62 179.213 343.933C178.973 344.24 178.853 344.676 178.853 345.243H178.463C178.463 344.716 178.54 344.263 178.693 343.883C178.847 343.503 179.067 343.213 179.353 343.013C179.647 342.813 180 342.713 180.413 342.713C181.02 342.713 181.497 342.9 181.843 343.273C182.197 343.646 182.37 344.213 182.363 344.973L181.563 345.273ZM185.379 347.953C185.013 347.953 184.693 347.9 184.419 347.793C184.146 347.68 183.916 347.533 183.729 347.353C183.549 347.173 183.419 346.976 183.339 346.763L184.039 346.473C184.153 346.7 184.323 346.883 184.549 347.023C184.776 347.163 185.026 347.233 185.299 347.233C185.613 347.233 185.876 347.173 186.089 347.053C186.303 346.926 186.409 346.75 186.409 346.523C186.409 346.316 186.329 346.15 186.169 346.023C186.016 345.896 185.786 345.793 185.479 345.713L184.999 345.583C184.546 345.463 184.193 345.283 183.939 345.043C183.686 344.796 183.559 344.52 183.559 344.213C183.559 343.74 183.713 343.373 184.019 343.113C184.333 342.846 184.796 342.713 185.409 342.713C185.703 342.713 185.969 342.756 186.209 342.843C186.449 342.93 186.656 343.053 186.829 343.213C187.003 343.366 187.129 343.55 187.209 343.763L186.509 344.073C186.423 343.846 186.279 343.683 186.079 343.583C185.879 343.483 185.636 343.433 185.349 343.433C185.043 343.433 184.803 343.5 184.629 343.633C184.456 343.76 184.369 343.94 184.369 344.173C184.369 344.306 184.439 344.433 184.579 344.553C184.726 344.666 184.939 344.76 185.219 344.833L185.719 344.963C186.046 345.043 186.319 345.163 186.539 345.323C186.759 345.476 186.926 345.653 187.039 345.853C187.153 346.053 187.209 346.266 187.209 346.493C187.209 346.793 187.129 347.053 186.969 347.273C186.809 347.493 186.593 347.663 186.319 347.783C186.046 347.896 185.733 347.953 185.379 347.953Z"
            fill={graphTheme.text}
          />
        </Link>
        <Link to={RouteUtils.getTopTokensRoute({ network, layer: Layer.sapphire })}>
          <path
            d="M65.8395 245.333C77.7145 245.333 87.3411 254.959 87.3411 266.833C87.3411 278.707 77.7145 288.333 65.8395 288.333C53.9644 288.333 44.3379 278.707 44.3379 266.833C44.3379 254.959 53.9644 245.333 65.8395 245.333Z"
            fill={graphTheme.circleBorder}
            stroke={graphTheme.line}
          />
          <path
            d="M52.6072 269.833V263.413H53.4472V269.833H52.6072ZM50.3772 263.603V262.833H55.6772V263.603H50.3772ZM58.0796 269.953C57.5929 269.953 57.1596 269.843 56.7796 269.623C56.4062 269.396 56.1129 269.086 55.8996 268.693C55.6862 268.3 55.5796 267.846 55.5796 267.333C55.5796 266.82 55.6829 266.366 55.8896 265.973C56.1029 265.58 56.3962 265.273 56.7696 265.053C57.1496 264.826 57.5796 264.713 58.0596 264.713C58.5529 264.713 58.9862 264.826 59.3596 265.053C59.7396 265.273 60.0329 265.58 60.2396 265.973C60.4529 266.366 60.5596 266.82 60.5596 267.333C60.5596 267.846 60.4529 268.3 60.2396 268.693C60.0329 269.086 59.7429 269.396 59.3696 269.623C58.9962 269.843 58.5662 269.953 58.0796 269.953ZM58.0796 269.213C58.4129 269.213 58.7029 269.133 58.9496 268.973C59.1962 268.813 59.3896 268.593 59.5296 268.313C59.6762 268.033 59.7496 267.706 59.7496 267.333C59.7496 266.96 59.6762 266.633 59.5296 266.353C59.3896 266.073 59.1929 265.853 58.9396 265.693C58.6862 265.533 58.3929 265.453 58.0596 265.453C57.7329 265.453 57.4429 265.533 57.1896 265.693C56.9429 265.853 56.7462 266.073 56.5996 266.353C56.4596 266.633 56.3896 266.96 56.3896 267.333C56.3896 267.7 56.4596 268.026 56.5996 268.313C56.7462 268.593 56.9462 268.813 57.1996 268.973C57.4596 269.133 57.7529 269.213 58.0796 269.213ZM62.4503 268.223L61.9403 267.673L64.6003 264.833H65.6103L62.4503 268.223ZM61.6703 269.833V262.833H62.4703V269.833H61.6703ZM64.8203 269.833L62.9203 266.963L63.4403 266.403L65.8103 269.833H64.8203ZM68.6064 269.953C68.1198 269.953 67.6898 269.843 67.3164 269.623C66.9431 269.396 66.6498 269.086 66.4364 268.693C66.2298 268.3 66.1264 267.846 66.1264 267.333C66.1264 266.82 66.2298 266.366 66.4364 265.973C66.6498 265.58 66.9398 265.273 67.3064 265.053C67.6798 264.826 68.1064 264.713 68.5864 264.713C69.0464 264.713 69.4464 264.83 69.7864 265.063C70.1331 265.29 70.3998 265.61 70.5864 266.023C70.7731 266.436 70.8664 266.923 70.8664 267.483H70.0664C70.0664 267.056 70.0098 266.693 69.8964 266.393C69.7831 266.086 69.6131 265.85 69.3864 265.683C69.1664 265.516 68.8964 265.433 68.5764 265.433C68.2498 265.433 67.9598 265.513 67.7064 265.673C67.4598 265.826 67.2698 266.046 67.1364 266.333C67.0031 266.62 66.9364 266.956 66.9364 267.343C66.9364 267.723 67.0098 268.053 67.1564 268.333C67.3031 268.606 67.5064 268.823 67.7664 268.983C68.0264 269.136 68.3198 269.213 68.6464 269.213C68.9931 269.213 69.2864 269.13 69.5264 268.963C69.7664 268.796 69.9564 268.58 70.0964 268.313L70.7964 268.663C70.6698 268.923 70.4998 269.15 70.2864 269.343C70.0798 269.536 69.8331 269.686 69.5464 269.793C69.2664 269.9 68.9531 269.953 68.6064 269.953ZM66.6564 267.483L66.6664 266.793H70.3764V267.483H66.6564ZM71.8754 269.833V264.833H72.6254L72.6754 265.753V269.833H71.8754ZM75.3854 269.833V267.273L76.1854 266.973V269.833H75.3854ZM75.3854 267.273C75.3854 266.78 75.3287 266.403 75.2154 266.143C75.1021 265.883 74.9454 265.706 74.7454 265.613C74.5454 265.513 74.3187 265.463 74.0654 265.463C73.6254 265.463 73.2821 265.62 73.0354 265.933C72.7954 266.24 72.6754 266.676 72.6754 267.243H72.2854C72.2854 266.716 72.3621 266.263 72.5154 265.883C72.6687 265.503 72.8887 265.213 73.1754 265.013C73.4687 264.813 73.8221 264.713 74.2354 264.713C74.8421 264.713 75.3187 264.9 75.6654 265.273C76.0187 265.646 76.1921 266.213 76.1854 266.973L75.3854 267.273ZM79.2016 269.953C78.8349 269.953 78.5149 269.9 78.2416 269.793C77.9683 269.68 77.7383 269.533 77.5516 269.353C77.3716 269.173 77.2416 268.976 77.1616 268.763L77.8616 268.473C77.9749 268.7 78.1449 268.883 78.3716 269.023C78.5983 269.163 78.8483 269.233 79.1216 269.233C79.4349 269.233 79.6983 269.173 79.9116 269.053C80.1249 268.926 80.2316 268.75 80.2316 268.523C80.2316 268.316 80.1516 268.15 79.9916 268.023C79.8383 267.896 79.6083 267.793 79.3016 267.713L78.8216 267.583C78.3683 267.463 78.0149 267.283 77.7616 267.043C77.5083 266.796 77.3816 266.52 77.3816 266.213C77.3816 265.74 77.5349 265.373 77.8416 265.113C78.1549 264.846 78.6183 264.713 79.2316 264.713C79.5249 264.713 79.7916 264.756 80.0316 264.843C80.2716 264.93 80.4783 265.053 80.6516 265.213C80.8249 265.366 80.9516 265.55 81.0316 265.763L80.3316 266.073C80.2449 265.846 80.1016 265.683 79.9016 265.583C79.7016 265.483 79.4583 265.433 79.1716 265.433C78.8649 265.433 78.6249 265.5 78.4516 265.633C78.2783 265.76 78.1916 265.94 78.1916 266.173C78.1916 266.306 78.2616 266.433 78.4016 266.553C78.5483 266.666 78.7616 266.76 79.0416 266.833L79.5416 266.963C79.8683 267.043 80.1416 267.163 80.3616 267.323C80.5816 267.476 80.7483 267.653 80.8616 267.853C80.9749 268.053 81.0316 268.266 81.0316 268.493C81.0316 268.793 80.9516 269.053 80.7916 269.273C80.6316 269.493 80.4149 269.663 80.1416 269.783C79.8683 269.896 79.5549 269.953 79.2016 269.953Z"
            fill={graphTheme.text}
          />
        </Link>
      </g>

      <g
        id={`${Layer.emerald}-circle`}
        aria-disabled={disabledMap[Layer.emerald]}
        onClick={() => onSelectLayer(Layer.emerald)}
        filter={graphTheme.emeraldCircleFilter}
        {...preventDoubleClick}
        {...handleHover(Layer.emerald, setHoveredLayer)}
      >
        {network === Network.mainnet && (
          <ellipse cx="195.702" cy="94.6959" rx="31.6963" ry="31.6959" fill="#030092" />
        )}
        <ellipse cx="195.702" cy="94.6959" rx="31.6963" ry="31.6959" fill={graphTheme.emeraldCircle} />
        <ellipse cx="195.702" cy="94.6959" rx="31.6963" ry="31.6959" fill={graphTheme.hoverBackground} />
      </g>
      <g
        id={`${Layer.emerald}-label`}
        aria-disabled={disabledMap[Layer.emerald]}
        onClick={() => onSelectLayer(Layer.emerald)}
        {...preventDoubleClick}
        {...handleHover(Layer.emerald, setHoveredLayer)}
      >
        {hoveredLayer !== Layer.emerald && (
          <text x="174.4" y="97" fill={graphTheme.text} fontSize="12px">
            {t('common.emerald')}
          </text>
        )}
        {hoveredLayer === Layer.emerald && !disabledMap[Layer.emerald] && (
          <text x="181.5" y="97" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            {t('common.view')}
          </text>
        )}
        {hoveredLayer === Layer.emerald && disabledMap[Layer.emerald] && (
          <text x="177.4" y="97" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            <tspan dx="-4" dy="-5">
              {t('common.coming')}
            </tspan>
            <tspan dx="-35" dy="12">
              {t('common.soon')}
            </tspan>
          </text>
        )}
      </g>
      <g
        id={`${Layer.sapphire}-circle`}
        aria-disabled={disabledMap[Layer.sapphire]}
        onClick={() => onSelectLayer(Layer.sapphire)}
        filter={graphTheme.sapphireCircleFilter}
        {...preventDoubleClick}
        {...handleHover(Layer.sapphire, setHoveredLayer)}
      >
        {network === Network.mainnet && (
          <ellipse cx="123.702" cy="302.696" rx="31.6963" ry="31.6959" fill="#030092" />
        )}
        <ellipse cx="123.702" cy="302.696" rx="31.6963" ry="31.6959" fill={graphTheme.sapphireCircle} />
        <ellipse cx="123.702" cy="302.696" rx="31.6963" ry="31.6959" fill={graphTheme.hoverBackground} />
      </g>
      <g
        id={`${Layer.sapphire}-label`}
        aria-disabled={disabledMap[Layer.sapphire]}
        onClick={() => onSelectLayer(Layer.sapphire)}
        {...preventDoubleClick}
        {...handleHover(Layer.sapphire, setHoveredLayer)}
      >
        {hoveredLayer !== Layer.sapphire && (
          <text x="100" y="305" fill={graphTheme.text} fontSize="12px">
            {t('common.sapphire')}
          </text>
        )}
        {hoveredLayer === Layer.sapphire && !disabledMap[Layer.sapphire] && (
          <text x="109.5" y="305" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            {t('common.view')}
          </text>
        )}
        {hoveredLayer === Layer.sapphire && disabledMap[Layer.sapphire] && (
          <text x="106" y="305" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            <tspan dx="-4" dy="-5">
              {t('common.coming')}
            </tspan>
            <tspan dx="-35" dy="12">
              {t('common.soon')}
            </tspan>
          </text>
        )}
      </g>
      <g
        id={`${Layer.consensus}-circle`}
        onClick={() => onSelectLayer(Layer.consensus)}
        aria-disabled={disabledMap[Layer.consensus]}
        {...handleHover(Layer.consensus, setHoveredLayer)}
      >
        <circle
          className="no-hide"
          opacity="0.25"
          cx="188.995"
          cy="209.993"
          r="52.9926"
          transform="rotate(-90 188.995 209.993)"
          fill={graphTheme.line}
          {...preventDoubleClick}
        />
        <circle
          cx="188.502"
          cy="209.5"
          r="42.5"
          transform="rotate(-90 188.502 209.5)"
          fill={graphTheme.line}
          {...preventDoubleClick}
        />
        <circle
          cx="189.002"
          cy="210"
          r="36"
          transform="rotate(-90 189.002 210)"
          fill={graphTheme.consensusCircle}
          {...preventDoubleClick}
        />
        <ellipse
          cx="188.502"
          cy="209.5"
          rx="42.5"
          ry="42.5"
          transform="rotate(-90 188.995 209.5)"
          fill={graphTheme.hoverBackground}
        />
      </g>
      <g
        id={`${Layer.consensus}-label`}
        aria-disabled={disabledMap[Layer.consensus]}
        onClick={() => onSelectLayer(Layer.consensus)}
        {...preventDoubleClick}
        {...handleHover(Layer.consensus, setHoveredLayer)}
      >
        {hoveredLayer !== Layer.consensus && (
          <text x="161" y="212" fill={graphTheme.text} fontSize="12px">
            {t('common.consensus')}
          </text>
        )}
        {hoveredLayer === Layer.consensus && !disabledMap[Layer.consensus] && (
          <text x="173" y="214" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            {t('common.view')}
          </text>
        )}
        {hoveredLayer === Layer.consensus && disabledMap[Layer.consensus] && (
          <text x="170" y="212" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            <tspan dx="-4" dy="-5">
              {t('common.coming')}
            </tspan>
            <tspan dx="-35" dy="12">
              {t('common.soon')}
            </tspan>
          </text>
        )}
      </g>
      <g
        filter={graphTheme.cipherCircleFilter}
        aria-disabled={disabledMap[Layer.cipher]}
        onClick={() => onSelectLayer(Layer.cipher)}
        id={`${Layer.cipher}-circle`}
        {...preventDoubleClick}
        {...handleHover(Layer.cipher, setHoveredLayer)}
      >
        <ellipse cx="306.702" cy="201.696" rx="31.6963" ry="31.6959" fill={graphTheme.cipherCircleFill} />
        {network === Network.mainnet && (
          <ellipse cx="306.702" cy="201.696" rx="31.6963" ry="31.6959" fill={graphTheme.cipherCircle} />
        )}
        <ellipse cx="306.702" cy="201.696" rx="31.6963" ry="31.6959" fill={graphTheme.hoverBackground} />
      </g>
      <g
        id={`${Layer.cipher}-label`}
        aria-disabled={disabledMap[Layer.cipher]}
        onClick={() => onSelectLayer(Layer.cipher)}
        {...preventDoubleClick}
        {...handleHover(Layer.cipher, setHoveredLayer)}
      >
        {hoveredLayer !== Layer.cipher && (
          <text x="290" y="205" fill={graphTheme.text} fontSize="12px">
            {t('common.cipher')}
          </text>
        )}
        {hoveredLayer === Layer.cipher && !disabledMap[Layer.cipher] && (
          <text x="294" y="205" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            {t('common.view')}
          </text>
        )}
        {hoveredLayer === Layer.cipher && disabledMap[Layer.cipher] && (
          <text x="290" y="205" fill={graphTheme.hoverText} fontSize="12px" fontWeight="700">
            <tspan dx="-4" dy="-5">
              {t('common.coming')}
            </tspan>
            <tspan dx="-35" dy="12">
              {t('common.soon')}
            </tspan>
          </text>
        )}
      </g>

      <defs>
        <filter
          id="filter0_dii_6093_287252"
          x="114.629"
          y="16.0917"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.135917 0 0 0 0 0 0 0 0 0 0.970833 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_287252" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_287252" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dx="6.17215" dy="9.87544" />
          <feGaussianBlur stdDeviation="6.17215" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0.996078 0 0 0 0 1 0 0 0 0.95 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_287252" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend
            mode="normal"
            in2="effect2_innerShadow_6093_287252"
            result="effect3_innerShadow_6093_287252"
          />
        </filter>
        <filter
          id="filter1_dii_6093_287252"
          x="42.6287"
          y="224.092"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.135917 0 0 0 0 0 0 0 0 0 0.970833 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_287252" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_287252" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dx="6.17215" dy="9.87544" />
          <feGaussianBlur stdDeviation="6.17215" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0.996078 0 0 0 0 1 0 0 0 0.95 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_287252" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend
            mode="normal"
            in2="effect2_innerShadow_6093_287252"
            result="effect3_innerShadow_6093_287252"
          />
        </filter>
        <filter
          id="filter2_dii_6093_287252"
          x="225.629"
          y="123.092"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.135917 0 0 0 0 0 0 0 0 0 0.970833 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_287252" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_287252" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dx="6.17215" dy="9.87544" />
          <feGaussianBlur stdDeviation="6.17215" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0.996078 0 0 0 0 1 0 0 0 0.95 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_287252" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend
            mode="normal"
            in2="effect2_innerShadow_6093_287252"
            result="effect3_innerShadow_6093_287252"
          />
        </filter>
        <linearGradient
          id="paint0_linear_6093_287252"
          x1="164.188"
          y1="82.5885"
          x2="180.881"
          y2="93.5764"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_6093_287252"
          x1="225.045"
          y1="79.419"
          x2="206.45"
          y2="94.4218"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <linearGradient
          id="paint2_linear_6093_287252"
          x1="95.1547"
          y1="335.409"
          x2="109.349"
          y2="321.34"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <linearGradient
          id="paint3_linear_6093_287252"
          x1="155.753"
          y1="324.162"
          x2="137.454"
          y2="308.801"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <linearGradient
          id="paint4_linear_6093_287252"
          x1="78.978"
          y1="278.402"
          x2="100.478"
          y2="288.824"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <linearGradient
          id="paint5_linear_6093_287252"
          x1="195.2"
          y1="40.3895"
          x2="196.887"
          y2="64.2225"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#02EAE4" />
          <stop offset="1" stopColor="#2C3BD5" />
        </linearGradient>
        <radialGradient
          id="paint6_radial_6093_287252"
          cx="0"
          cy="0"
          r="1"
          gradientUnits="userSpaceOnUse"
          gradientTransform="translate(208.634 82.7783) rotate(110.974) scale(65.1743 65.1749)"
        >
          <stop stopColor="#3244E8" />
          <stop offset="1" stopColor="#000210" stopOpacity="0" />
        </radialGradient>
        <radialGradient
          id="paint7_radial_6093_287252"
          cx="0"
          cy="0"
          r="1"
          gradientUnits="userSpaceOnUse"
          gradientTransform="translate(136.634 290.778) rotate(110.974) scale(65.1743 65.1749)"
        >
          <stop stopColor="#3244E8" />
          <stop offset="1" stopColor="#000210" stopOpacity="0" />
        </radialGradient>
        <radialGradient
          id="paint8_radial_6093_287252"
          cx="0"
          cy="0"
          r="1"
          gradientUnits="userSpaceOnUse"
          gradientTransform="translate(319.634 189.778) rotate(110.974) scale(65.1743 65.1749)"
        >
          <stop stopColor="#3244E8" />
          <stop offset="1" stopColor="#000210" stopOpacity="0" />
        </radialGradient>

        <filter
          id="filter0_di_6093_290291"
          x="114.629"
          y="0.091677"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.47451 0 0 0 0 0.313726 0 0 0 0 0 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_290291" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_290291" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_290291" />
        </filter>
        <filter
          id="filter1_di_6093_290291"
          x="42.6287"
          y="208.092"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.47451 0 0 0 0 0.313726 0 0 0 0 0 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_290291" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_290291" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_290291" />
        </filter>
        <filter
          id="filter2_di_6093_290291"
          x="225.629"
          y="107.092"
          width="162.147"
          height="162.146"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2.46886" />
          <feGaussianBlur stdDeviation="24.6886" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.47451 0 0 0 0 0.313726 0 0 0 0 0 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6093_290291" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6093_290291" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.23443" />
          <feGaussianBlur stdDeviation="3.08607" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.58 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6093_290291" />
        </filter>
      </defs>
    </GraphStyled>
  )
}

export const Graph = memo(forwardRef(GraphCmp))
