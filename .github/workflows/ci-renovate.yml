# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-renovate

# Trigger the workflow when:
on:
  # When a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches: [master]

jobs:
  add-changelog:
    # NOTE: This name appears in GitHub's Checks API.
    name: add-changelog
    # Trigger job only for dependency update bot.
    # if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest
    # Permissions needed to update PR.
    permissions:
      # Enable creating, updating files
      contents: write
      # Enable updating commit status
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Needed for correct git commit --amend.
          fetch-depth: 0
          # Checkout pull request HEAD commit instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set workflow variables
        # Id is needed to access output in a next step.
        id: vars
        run: |
          echo "FILE_NAME=.changelog/${{ github.event.pull_request.number }}.internal.md" >> $GITHUB_OUTPUT
      - name: Check if file exists
        id: check_file
        run: |
          if [ -f ${{ steps.vars.outputs.FILE_NAME }} ]; then
            echo "FILE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "FILE_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Print FILE_EXISTS variable
        run: |
          echo "FILE_EXISTS: ${{ steps.check_file.outputs.FILE_EXISTS }}"
      - name: Create Change Log file
        if: steps.check_file.outputs.FILE_EXISTS == false
        run: |
          echo "${{ github.event.pull_request.title }}" > ${{ steps.vars.outputs.FILE_NAME }}
      - name: Commit Change Log file
        if: steps.check_file.outputs.FILE_EXISTS == false
        run: |
          # Set git user email and name to match author of the last commit.
          git config --local user.email "$(git log --pretty='%ae' -1)"
          git config --local user.name "$(git log --pretty=format:'%an' -1)"
          git add ${{ steps.vars.outputs.FILE_NAME }}
          git commit --amend --no-edit
      - name: Push changes back to branch
        if: steps.check_file.outputs.FILE_EXISTS == false
        run: |
          git push --force-with-lease origin HEAD:refs/heads/${{ github.head_ref }}

      - name: Trigger all checks again
        if: steps.check_file.outputs.FILE_EXISTS == false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          CHECK_NAME="ci-lint"

          # Get the latest commit SHA for the pull request
          NEW_COMMIT_SHA=$(git rev-parse "${{ github.head_ref }}")

          # Find the check run ID of the previous run for the pull request
          PREVIOUS_CHECK_RUN_ID=$(curl -s -X GET \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.antiope-preview+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs" \
            | jq '.check_runs[] | select(.name == "'"$CHECK_NAME"'" and .head_sha == "'"$NEW_COMMIT_SHA"'") | .id')

          if [ -n "$PREVIOUS_CHECK_RUN_ID" ]; then
            # Re-run the previous check run for the new commit hash
            RESPONSE=$(curl -s -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.antiope-preview+json" \
              -d "{\"name\":\"$CHECK_NAME\",\"head_sha\":\"$NEW_COMMIT_SHA\",\"status\":\"in_progress\",\"started_at\":\"$(date --iso-8601=seconds)\"}" \
              "https://api.github.com/repos/${{ github.repository }}/check-runs/$PREVIOUS_CHECK_RUN_ID/rerequest")
          else
            # If no previous check run found, create a new check run for the new commit hash
            RESPONSE=$(curl -s -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.antiope-preview+json" \
              -d "{\"name\":\"$CHECK_NAME\",\"head_sha\":\"$NEW_COMMIT_SHA\",\"status\":\"in_progress\",\"started_at\":\"$(date --iso-8601=seconds)\"}" \
              "https://api.github.com/repos/${{ github.repository }}/check-runs")
          fi
