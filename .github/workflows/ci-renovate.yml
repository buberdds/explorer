# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-renovate

# Trigger the workflow when:
on:
  # When a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches: [master]

jobs:
  add-changelog:
    # NOTE: This name appears in GitHub's Checks API.
    name: add-changelog
    # Trigger job only for dependency update bot.
    # if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest
    # Permissions needed to update PR.
    permissions:
      # Enable creating, updating files
      contents: write
      checks: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Needed for correct git commit --amend.
          fetch-depth: 0
          # Checkout pull request HEAD commit instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set workflow variables
        # Id is needed to access output in a next step.
        id: vars
        run: |
          echo "FILE_NAME=.changelog/${{ github.event.pull_request.number }}.internal.md" >> $GITHUB_OUTPUT
      - name: Create Change Log file
        run: |
          echo "${{ github.event.pull_request.title }}" > ${{ steps.vars.outputs.FILE_NAME }}
      - name: Commit Change Log file
        run: |
          # Set git user email and name to match author of the last commit.
          git config --local user.email "$(git log --pretty='%ae' -1)"
          git config --local user.name "$(git log --pretty=format:'%an' -1)"
          git add ${{ steps.vars.outputs.FILE_NAME }}
          git commit --amend --no-edit
      - name: Push changes back to branch
        run: |
          git push --force-with-lease origin HEAD:refs/heads/${{ github.head_ref }}

      - name: Create Check Run
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data } = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ci-lint',
              head_sha: context.payload.after,
              status: 'in_progress',
              started_at: new Date().toISOString(),
            });
            console.log(`Check run created: ${data.url}`);
            core.setOutput('check_run_id', data.id);

      # - name: Rerun all workflows using PAT
      #   env:
      #     PAT: ${{ secrets.PAT_SECRET }}
      #   run: |
      #     curl -X POST \
      #       -H "Authorization: Bearer $PAT" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       "https://api.github.com/repos/${{ github.repository }}/actions/workflows/54895214/dispatches" \
      #       -d '{"ref": "${{ github.head_ref }}"}'

      # - name: Rerun all workflows using PAT
      #   env:
      #     PAT: ${{ secrets.PAT_SECRET }}
      #   run: |
      #     curl -X POST \
      #       -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       "https://api.github.com/repos/${{ github.repository }}/actions/workflows/54895214/dispatches" \
      #       -d '{"ref": "${{ github.head_ref }}"}'

      #     curl -X POST \
      #       -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       "https://api.github.com/repos/${{ github.repository }}/check-runs" \
      #       -d '{
      #         "name": "ci-lint",
      #         "head_sha": "${{ github.sha }}",
      #         "status": "in_progress"
      #       }'
