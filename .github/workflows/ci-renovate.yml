# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-renovate

# Trigger the workflow when:
on:
  # When a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches: [master]

jobs:
  add-changelog:
    # NOTE: This name appears in GitHub's Checks API.
    name: add-changelog
    # Trigger job only for dependency update bot.
    if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest
    # Permissions needed to update PR.
    permissions:
      # Enable creating, updating files
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Needed for correct git commit --amend.
          fetch-depth: 0
          # Checkout pull request HEAD commit instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          # Needed for Create Check Run step.
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set workflow variables
        # Id is needed to access output in a next step.
        id: vars
        run: |
          echo "FILE_NAME=.changelog/${{ github.event.pull_request.number }}.internal.md" >> $GITHUB_OUTPUT
      - name: Check if Change Log file exists
        id: check_file
        run: |
          if [[ ! -f "${{ steps.vars.outputs.FILE_NAME }}" ]]; then
            # Change Log file does not exist, continue with other steps.
            echo "FILE_EXISTS=false" >> $GITHUB_OUTPUT
          else
            # File exists, skip all other steps.
            echo "FILE_EXISTS=true" >> $GITHUB_OUTPUT
          fi
      - name: Create Change Log file
        if: steps.check_file.outputs.FILE_EXISTS == 'false'
        run: |
          echo "${{ github.event.pull_request.title }}" > ${{ steps.vars.outputs.FILE_NAME }}
      - name: Commit Change Log file
        if: steps.check_file.outputs.FILE_EXISTS == 'false'
        run: |
          # Set git user email and name to match author of the last commit.
          git config --local user.email "$(git log --pretty='%ae' -1)"
          git config --local user.name "$(git log --pretty=format:'%an' -1)"
          git add ${{ steps.vars.outputs.FILE_NAME }}
          git commit --amend --no-edit
          # git commit -m "Append Change Log fragment"
      - name: Push changes back to branch
        if: steps.check_file.outputs.FILE_EXISTS == 'false'
        run: |
          git push --force-with-lease origin HEAD:refs/heads/${{ github.head_ref }}
          # git push origin HEAD:refs/heads/${{ github.head_ref }}
      - name: Create Check Run
        if: steps.check_file.outputs.FILE_EXISTS == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data } = await github.rest.checks.createSuite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.payload.after
            });
